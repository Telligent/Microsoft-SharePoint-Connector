//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18052.
// 
#pragma warning disable 1591

namespace Telligent.Evolution.Extensions.SharePoint.WebServices.UserProfileChangeService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserProfileChangeServiceSoap", Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProfileBaseChangeQuery))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserProfileChangeData[]))]
    public partial class UserProfileChangeService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentChangeTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAllChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangesWithRemotePersonalSiteHostUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCurrentChangeTokenOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UserProfileChangeService() {
            this.Url = global::Telligent.Evolution.Extensions.SharePoint.WebServices.Properties.Settings.Default.Telligent_Evolution_Extensions_SharePoint_WebServices_UserProfileChangeService_UserProfileChangeService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllChangesCompletedEventHandler GetAllChangesCompleted;
        
        /// <remarks/>
        public event GetChangesCompletedEventHandler GetChangesCompleted;
        
        /// <remarks/>
        public event GetCurrentChangeTokenCompletedEventHandler GetCurrentChangeTokenCompleted;
        
        /// <remarks/>
        public event GetUserAllChangesCompletedEventHandler GetUserAllChangesCompleted;
        
        /// <remarks/>
        public event GetUserChangesCompletedEventHandler GetUserChangesCompleted;
        
        /// <remarks/>
        public event GetChangesWithRemotePersonalSiteHostUrlCompletedEventHandler GetChangesWithRemotePersonalSiteHostUrlCompleted;
        
        /// <remarks/>
        public event GetUserCurrentChangeTokenCompletedEventHandler GetUserCurrentChangeTokenCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService/" +
            "GetAllChanges", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserProfileChangeDataContainer GetAllChanges() {
            object[] results = this.Invoke("GetAllChanges", new object[0]);
            return ((UserProfileChangeDataContainer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllChangesAsync() {
            this.GetAllChangesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllChangesAsync(object userState) {
            if ((this.GetAllChangesOperationCompleted == null)) {
                this.GetAllChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllChangesOperationCompleted);
            }
            this.InvokeAsync("GetAllChanges", new object[0], this.GetAllChangesOperationCompleted, userState);
        }
        
        private void OnGetAllChangesOperationCompleted(object arg) {
            if ((this.GetAllChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllChangesCompleted(this, new GetAllChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService/" +
            "GetChanges", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserProfileChangeDataContainer GetChanges(string changeToken, UserProfileChangeQuery changeQuery) {
            object[] results = this.Invoke("GetChanges", new object[] {
                        changeToken,
                        changeQuery});
            return ((UserProfileChangeDataContainer)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangesAsync(string changeToken, UserProfileChangeQuery changeQuery) {
            this.GetChangesAsync(changeToken, changeQuery, null);
        }
        
        /// <remarks/>
        public void GetChangesAsync(string changeToken, UserProfileChangeQuery changeQuery, object userState) {
            if ((this.GetChangesOperationCompleted == null)) {
                this.GetChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangesOperationCompleted);
            }
            this.InvokeAsync("GetChanges", new object[] {
                        changeToken,
                        changeQuery}, this.GetChangesOperationCompleted, userState);
        }
        
        private void OnGetChangesOperationCompleted(object arg) {
            if ((this.GetChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangesCompleted(this, new GetChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService/" +
            "GetCurrentChangeToken", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentChangeToken() {
            object[] results = this.Invoke("GetCurrentChangeToken", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentChangeTokenAsync() {
            this.GetCurrentChangeTokenAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentChangeTokenAsync(object userState) {
            if ((this.GetCurrentChangeTokenOperationCompleted == null)) {
                this.GetCurrentChangeTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentChangeTokenOperationCompleted);
            }
            this.InvokeAsync("GetCurrentChangeToken", new object[0], this.GetCurrentChangeTokenOperationCompleted, userState);
        }
        
        private void OnGetCurrentChangeTokenOperationCompleted(object arg) {
            if ((this.GetCurrentChangeTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentChangeTokenCompleted(this, new GetCurrentChangeTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService/" +
            "GetUserAllChanges", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserProfileChangeDataContainer GetUserAllChanges(string userAccountName) {
            object[] results = this.Invoke("GetUserAllChanges", new object[] {
                        userAccountName});
            return ((UserProfileChangeDataContainer)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAllChangesAsync(string userAccountName) {
            this.GetUserAllChangesAsync(userAccountName, null);
        }
        
        /// <remarks/>
        public void GetUserAllChangesAsync(string userAccountName, object userState) {
            if ((this.GetUserAllChangesOperationCompleted == null)) {
                this.GetUserAllChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAllChangesOperationCompleted);
            }
            this.InvokeAsync("GetUserAllChanges", new object[] {
                        userAccountName}, this.GetUserAllChangesOperationCompleted, userState);
        }
        
        private void OnGetUserAllChangesOperationCompleted(object arg) {
            if ((this.GetUserAllChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAllChangesCompleted(this, new GetUserAllChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService/" +
            "GetUserChanges", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserProfileChangeDataContainer GetUserChanges(string userAccountName, string changeToken, UserProfileChangeQuery changeQuery) {
            object[] results = this.Invoke("GetUserChanges", new object[] {
                        userAccountName,
                        changeToken,
                        changeQuery});
            return ((UserProfileChangeDataContainer)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserChangesAsync(string userAccountName, string changeToken, UserProfileChangeQuery changeQuery) {
            this.GetUserChangesAsync(userAccountName, changeToken, changeQuery, null);
        }
        
        /// <remarks/>
        public void GetUserChangesAsync(string userAccountName, string changeToken, UserProfileChangeQuery changeQuery, object userState) {
            if ((this.GetUserChangesOperationCompleted == null)) {
                this.GetUserChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserChangesOperationCompleted);
            }
            this.InvokeAsync("GetUserChanges", new object[] {
                        userAccountName,
                        changeToken,
                        changeQuery}, this.GetUserChangesOperationCompleted, userState);
        }
        
        private void OnGetUserChangesOperationCompleted(object arg) {
            if ((this.GetUserChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserChangesCompleted(this, new GetUserChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService/" +
            "GetChangesWithRemotePersonalSiteHostUrl", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserProfileChangeDataContainer GetChangesWithRemotePersonalSiteHostUrl(string changeToken, UserProfileChangeQuery changeQuery) {
            object[] results = this.Invoke("GetChangesWithRemotePersonalSiteHostUrl", new object[] {
                        changeToken,
                        changeQuery});
            return ((UserProfileChangeDataContainer)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangesWithRemotePersonalSiteHostUrlAsync(string changeToken, UserProfileChangeQuery changeQuery) {
            this.GetChangesWithRemotePersonalSiteHostUrlAsync(changeToken, changeQuery, null);
        }
        
        /// <remarks/>
        public void GetChangesWithRemotePersonalSiteHostUrlAsync(string changeToken, UserProfileChangeQuery changeQuery, object userState) {
            if ((this.GetChangesWithRemotePersonalSiteHostUrlOperationCompleted == null)) {
                this.GetChangesWithRemotePersonalSiteHostUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangesWithRemotePersonalSiteHostUrlOperationCompleted);
            }
            this.InvokeAsync("GetChangesWithRemotePersonalSiteHostUrl", new object[] {
                        changeToken,
                        changeQuery}, this.GetChangesWithRemotePersonalSiteHostUrlOperationCompleted, userState);
        }
        
        private void OnGetChangesWithRemotePersonalSiteHostUrlOperationCompleted(object arg) {
            if ((this.GetChangesWithRemotePersonalSiteHostUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangesWithRemotePersonalSiteHostUrlCompleted(this, new GetChangesWithRemotePersonalSiteHostUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService/" +
            "GetUserCurrentChangeToken", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserCurrentChangeToken(string userAccountName) {
            object[] results = this.Invoke("GetUserCurrentChangeToken", new object[] {
                        userAccountName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCurrentChangeTokenAsync(string userAccountName) {
            this.GetUserCurrentChangeTokenAsync(userAccountName, null);
        }
        
        /// <remarks/>
        public void GetUserCurrentChangeTokenAsync(string userAccountName, object userState) {
            if ((this.GetUserCurrentChangeTokenOperationCompleted == null)) {
                this.GetUserCurrentChangeTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCurrentChangeTokenOperationCompleted);
            }
            this.InvokeAsync("GetUserCurrentChangeToken", new object[] {
                        userAccountName}, this.GetUserCurrentChangeTokenOperationCompleted, userState);
        }
        
        private void OnGetUserCurrentChangeTokenOperationCompleted(object arg) {
            if ((this.GetUserCurrentChangeTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCurrentChangeTokenCompleted(this, new GetUserCurrentChangeTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService")]
    public partial class UserProfileChangeDataContainer {
        
        private UserProfileChangeData[] changesField;
        
        private string changeTokenField;
        
        private bool hasExceededCountLimitField;
        
        /// <remarks/>
        public UserProfileChangeData[] Changes {
            get {
                return this.changesField;
            }
            set {
                this.changesField = value;
            }
        }
        
        /// <remarks/>
        public string ChangeToken {
            get {
                return this.changeTokenField;
            }
            set {
                this.changeTokenField = value;
            }
        }
        
        /// <remarks/>
        public bool HasExceededCountLimit {
            get {
                return this.hasExceededCountLimitField;
            }
            set {
                this.hasExceededCountLimitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService")]
    public partial class UserProfileChangeData {
        
        private long idField;
        
        private string userAccountNameField;
        
        private string userRemotePersonalSiteHostUrlField;
        
        private ChangeTypes changeTypeField;
        
        private ObjectTypes objectTypeField;
        
        private System.DateTime eventTimeField;
        
        private object valueField;
        
        private System.Guid policyIdField;
        
        private string propertyNameField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string UserAccountName {
            get {
                return this.userAccountNameField;
            }
            set {
                this.userAccountNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserRemotePersonalSiteHostUrl {
            get {
                return this.userRemotePersonalSiteHostUrlField;
            }
            set {
                this.userRemotePersonalSiteHostUrlField = value;
            }
        }
        
        /// <remarks/>
        public ChangeTypes ChangeType {
            get {
                return this.changeTypeField;
            }
            set {
                this.changeTypeField = value;
            }
        }
        
        /// <remarks/>
        public ObjectTypes ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PolicyId {
            get {
                return this.policyIdField;
            }
            set {
                this.policyIdField = value;
            }
        }
        
        /// <remarks/>
        public string PropertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService")]
    public enum ChangeTypes {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        Add = 2,
        
        /// <remarks/>
        Modify = 4,
        
        /// <remarks/>
        Delete = 8,
        
        /// <remarks/>
        Metadata = 16,
        
        /// <remarks/>
        All = 32,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService")]
    public enum ObjectTypes {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        SingleValueProperty = 2,
        
        /// <remarks/>
        MultiValueProperty = 4,
        
        /// <remarks/>
        Anniversary = 8,
        
        /// <remarks/>
        DLMembership = 16,
        
        /// <remarks/>
        SiteMembership = 32,
        
        /// <remarks/>
        QuickLink = 64,
        
        /// <remarks/>
        Colleague = 128,
        
        /// <remarks/>
        PersonalizationSite = 256,
        
        /// <remarks/>
        UserProfile = 512,
        
        /// <remarks/>
        WebLog = 1024,
        
        /// <remarks/>
        Custom = 2048,
        
        /// <remarks/>
        OrganizationProfile = 4096,
        
        /// <remarks/>
        OrganizationMembership = 8192,
        
        /// <remarks/>
        All = 16384,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService")]
    public partial class UserProfileChangeToken {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserProfileChangeQuery))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService")]
    public partial class ProfileBaseChangeQuery {
        
        private bool singleValuePropertyField;
        
        private bool multiValuePropertyField;
        
        private bool customField;
        
        private bool addField;
        
        private bool updateField;
        
        private bool updateMetadataField;
        
        private bool deleteField;
        
        private UserProfileChangeToken changeTokenStartField;
        
        /// <remarks/>
        public bool SingleValueProperty {
            get {
                return this.singleValuePropertyField;
            }
            set {
                this.singleValuePropertyField = value;
            }
        }
        
        /// <remarks/>
        public bool MultiValueProperty {
            get {
                return this.multiValuePropertyField;
            }
            set {
                this.multiValuePropertyField = value;
            }
        }
        
        /// <remarks/>
        public bool Custom {
            get {
                return this.customField;
            }
            set {
                this.customField = value;
            }
        }
        
        /// <remarks/>
        public bool Add {
            get {
                return this.addField;
            }
            set {
                this.addField = value;
            }
        }
        
        /// <remarks/>
        public bool Update {
            get {
                return this.updateField;
            }
            set {
                this.updateField = value;
            }
        }
        
        /// <remarks/>
        public bool UpdateMetadata {
            get {
                return this.updateMetadataField;
            }
            set {
                this.updateMetadataField = value;
            }
        }
        
        /// <remarks/>
        public bool Delete {
            get {
                return this.deleteField;
            }
            set {
                this.deleteField = value;
            }
        }
        
        /// <remarks/>
        public UserProfileChangeToken ChangeTokenStart {
            get {
                return this.changeTokenStartField;
            }
            set {
                this.changeTokenStartField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/SharePointPortalServer/UserProfileChangeService")]
    public partial class UserProfileChangeQuery : ProfileBaseChangeQuery {
        
        private bool anniversaryField;
        
        private bool distributionListMembershipField;
        
        private bool siteMembershipField;
        
        private bool quickLinkField;
        
        private bool colleagueField;
        
        private bool webLogField;
        
        private bool personalizationSiteField;
        
        private bool userProfileField;
        
        private bool organizationMembershipField;
        
        /// <remarks/>
        public bool Anniversary {
            get {
                return this.anniversaryField;
            }
            set {
                this.anniversaryField = value;
            }
        }
        
        /// <remarks/>
        public bool DistributionListMembership {
            get {
                return this.distributionListMembershipField;
            }
            set {
                this.distributionListMembershipField = value;
            }
        }
        
        /// <remarks/>
        public bool SiteMembership {
            get {
                return this.siteMembershipField;
            }
            set {
                this.siteMembershipField = value;
            }
        }
        
        /// <remarks/>
        public bool QuickLink {
            get {
                return this.quickLinkField;
            }
            set {
                this.quickLinkField = value;
            }
        }
        
        /// <remarks/>
        public bool Colleague {
            get {
                return this.colleagueField;
            }
            set {
                this.colleagueField = value;
            }
        }
        
        /// <remarks/>
        public bool WebLog {
            get {
                return this.webLogField;
            }
            set {
                this.webLogField = value;
            }
        }
        
        /// <remarks/>
        public bool PersonalizationSite {
            get {
                return this.personalizationSiteField;
            }
            set {
                this.personalizationSiteField = value;
            }
        }
        
        /// <remarks/>
        public bool UserProfile {
            get {
                return this.userProfileField;
            }
            set {
                this.userProfileField = value;
            }
        }
        
        /// <remarks/>
        public bool OrganizationMembership {
            get {
                return this.organizationMembershipField;
            }
            set {
                this.organizationMembershipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllChangesCompletedEventHandler(object sender, GetAllChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserProfileChangeDataContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserProfileChangeDataContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChangesCompletedEventHandler(object sender, GetChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserProfileChangeDataContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserProfileChangeDataContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrentChangeTokenCompletedEventHandler(object sender, GetCurrentChangeTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentChangeTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentChangeTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAllChangesCompletedEventHandler(object sender, GetUserAllChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAllChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAllChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserProfileChangeDataContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserProfileChangeDataContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserChangesCompletedEventHandler(object sender, GetUserChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserProfileChangeDataContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserProfileChangeDataContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChangesWithRemotePersonalSiteHostUrlCompletedEventHandler(object sender, GetChangesWithRemotePersonalSiteHostUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangesWithRemotePersonalSiteHostUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangesWithRemotePersonalSiteHostUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserProfileChangeDataContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserProfileChangeDataContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserCurrentChangeTokenCompletedEventHandler(object sender, GetUserCurrentChangeTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCurrentChangeTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCurrentChangeTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591