##
## Form shown when a non-oauth-linked existing user is attempting to log in via oauth
##

#if (!$oAuthData)
	#set ($oAuthData = $core_v2_authentication.GetOAuthData($oAuthDataTokenValue))
#end
#set ($oAuthProvider = $core_v2_authentication.GetOAuthProvider($oAuthData.ClientType))

<input type="hidden" name="$core_v2_encoding.HtmlAttributeEncode($actionInput)" id="$core_v2_encoding.HtmlAttributeEncode($actionInput)" value="link_accounts" />

<fieldset class="link-accounts">

	<h1>$core_v2_language.GetResource('Login_Title')</h1>

	<ul class="field-list login">

		<li class="field-item">
			<span class="field-item-description">
				$core_v2_language.FormatString($core_v2_language.GetResource('Login_LinkProvider_Welcome'), $user.DisplayName)
				$core_v2_language.FormatString($core_v2_language.GetResource('Login_ExistingAccount'), $siteInfo.SiteName, $oAuthProvider.ClientName)
			</span>
		</li>

		#set ($useCommunityNames = true)  ## acts like a parameter to tell the credential form to use fully quaified community names
		$core_v2_widget.ExecuteFile('sub_form_credentials.vm')
		<li class="field-item">
			<a class="internal-link login submit-button button" href="#">$core_v2_language.GetResource('LoginSmall_Button')</a>
			<span class="processing" style="visibility: hidden;"></span>
		</li>

		#set ($forgotPasswordUrl = $core_v2_urls.ForgotPassword())
		#if ($forgotPasswordUrl)
			<li class="field-item">
				<span class="field-item-description">
					$core_v2_language.GetResource('Login_Reset_Password_Message') <a href="$core_v2_encoding.HtmlAttributeEncode($forgotPasswordUrl)">$core_v2_language.GetResource('Login_Reset_Password_Link')</a>
				</span>
			</li>
		#end
		<li class="field-item">
			<span class="field-item-description">
				$core_v2_language.GetResource('Login_LinkProvider_Message')
			</span>
		</li>
	</ul>

</fieldset>
